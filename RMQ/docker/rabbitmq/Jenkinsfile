#!groovy
// Build RMQ image

def dockerEndpoints = [:]
dockerEndpoints['main'] = 'http://127.0.0.1:2376'

properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo "====================     docker login     ======================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub-mhaz223', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh "docker login -u $USERNAME -p $PASSWORD"
                }
                sh 'env | sort'
            }
        }
        stage("Build Docker image") {
            steps {
                echo "==================== start building image ======================="
                dir ('RMQ/docker/rabbitmq') {
                    sh 'docker build -t mhaz223/container-rmq1:latest . '
                }
            }
        }
        stage("Docker push") {
            steps {
                echo "==================== start pushing image  ======================="
                sh 'docker push mhaz223/container-rmq1:latest'
            }
        }
        stage("Deploy"){
            steps {
                if (dockerEndpoints["${env.BRANCH_NAME}"]) {
                    docker.withServer(dockerEndpoints["${env.BRANCH_NAME}"]) {
                        stage('Deploy') {
                            sh "ATR_RABBITMQ_TAG=${shortCommit} docker-compose --file=docker/compose-files/prod.yml pull rabbitmq"
                            sh "ATR_RABBITMQ_TAG=${shortCommit} docker-compose --file=docker/compose-files/prod.yml up -d --no-deps --no-color rabbitmq"
                        }
                    }
                } else {
                    echo 'Skipping deploy stage.'
                }
            } 
        }
    }
}
